version: '3.8'

services:
  # Frontend (React + Vite)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3001
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - ai-chatbot-network

  # Backend (Node.js + Express + AI/ML)
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: production
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-3.5-turbo}
      - OPENAI_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL:-text-embedding-ada-002}
      - CHROMA_DB_PATH=/app/vector_store
      - UPLOAD_DIR=/app/uploads
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - CORS_ORIGIN=http://localhost:5173
      - ENABLE_MEMORY_CACHE=true
      - CACHE_TTL_SECONDS=3600
    volumes:
      - backend_uploads:/app/uploads
      - backend_vector_store:/app/vector_store
      - backend_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ai-chatbot-network

  # Redis for caching (optional but recommended)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - ai-chatbot-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx-full.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - ai-chatbot-network

volumes:
  backend_uploads:
    driver: local
  backend_vector_store:
    driver: local
  backend_logs:
    driver: local
  redis_data:
    driver: local

networks:
  ai-chatbot-network:
    driver: bridge